name: "Aplicar atualização do data.json via Issue"

on:
  issues:
    types: [opened, edited, labeled]
  issue_comment:
    types: [created]

permissions:
  contents: write
  issues: read

env:
  PAGES_URL: https://acaciocs.github.io/natal-2025/

jobs:
  apply:
    runs-on: ubuntu-latest
    steps:
      - name: Checar repositório
        uses: actions/checkout@v4

      - name: Extrair JSON da issue e salvar como data.json
        id: parse
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const issue_number = context.payload.issue ? context.payload.issue.number
                                  : context.payload.comment ? context.payload.issue.number
                                  : null;
            if (!issue_number) { core.setFailed('Sem número da issue.'); return; }
            const { data: issue } = await github.rest.issues.get({ owner, repo, issue_number });
            const labels = issue.labels.map(l => (typeof l === 'string' ? l : l.name));
            if (!labels.includes('admin-update')) { core.setFailed('Falta label admin-update.'); return; }
            const body = issue.body || '';
            const m = body.match(/```json\s*([\s\S]*?)\s*```/i);
            if (!m) { core.setFailed('Cole seu JSON entre ```json ... ```'); return; }
            let obj;
            try { obj = JSON.parse(m[1]); } catch (e) { core.setFailed('JSON inválido: '+e.message); return; }
            if (!obj.eventInfo || !obj.costs || !obj.participants) { core.setFailed('Faltam chaves: eventInfo, costs, participants.'); return; }
            fs.writeFileSync('data.json', JSON.stringify(obj, null, 2), 'utf8');

      - name: Commit & push
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add data.json
          if git diff --cached --quiet; then
            echo "Nada a commitar."
          else
            git commit -m "chore(data): update via issue"
            git push
          fi

      - name: Comentar sucesso
        if: success()
        uses: actions/github-script@v7
        with:
          script: |
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const issue_number = context.payload.issue ? context.payload.issue.number
                                  : context.payload.comment ? context.payload.issue.number
                                  : null;
            const body = `✅ Dados publicados em data.json.\nAcesse: ${process.env.PAGES_URL}\n(Use **Atualizar agora** ou aguarde 30s)`;
            await github.rest.issues.createComment({ owner, repo, issue_number, body });

      - name: Comentar falha
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const issue_number = context.payload.issue ? context.payload.issue.number
                                  : context.payload.comment ? context.payload.issue.number
                                  : null;
            const body = `❌ Falha ao aplicar. Veja **Actions** para logs e edite a issue novamente.`;
            await github.rest.issues.createComment({ owner, repo, issue_number, body });
