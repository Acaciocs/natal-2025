name: "Aplicar atualiza√ß√£o do data.json via Issue"

on:
  issues:
    types: [opened, edited, labeled]
  issue_comment:
    types: [created]

permissions:
  contents: write
  issues: write

env:
  # üîß Troque pela URL do SEU GitHub Pages
  PAGES_URL: https://SEU_USUARIO.github.io/natal-familia-2025/

concurrency:
  group: data-json
  cancel-in-progress: false

jobs:
  apply:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Extrair JSON da issue e salvar como data.json
        id: parse
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');

            // N√∫mero da issue (vale para issues.* e issue_comment.*)
            const issue_number = context.payload.issue?.number;
            if (!issue_number) {
              core.setFailed('N√£o identifiquei o n√∫mero da issue.');
              return;
            }

            // Carrega a issue completa
            const { data: issue } = await github.rest.issues.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number,
            });

            // Verifica label obrigat√≥rio
            const labels = (issue.labels || []).map(l => typeof l === 'string' ? l : l.name);
            if (!labels.includes('admin-update')) {
              core.setFailed('Falta o label obrigat√≥rio "admin-update" nesta issue.');
              return;
            }

            // Tenta extrair bloco ```json ... ```
            const body = issue.body || '';
            let jsonText = null;

            // 1) bloco ```json ... ```
            let m = body.match(/```json\s*([\s\S]*?)\s*```/i);
            if (m && m[1]) jsonText = m[1];

            // 2) fallback: bloco ``` ... ```
            if (!jsonText) {
              m = body.match(/```\s*([\s\S]*?)\s*```/);
              if (m && m[1]) jsonText = m[1];
            }

            // 3) fallback: body inteiro (se o usu√°rio colou sem cercar)
            if (!jsonText) jsonText = body.trim();

            let obj;
            try {
              obj = JSON.parse(jsonText);
            } catch (e) {
              core.setFailed('JSON inv√°lido. Dica: coloque entre ```json ... ```.\nErro: ' + e.message);
              return;
            }

            // Valida chaves b√°sicas
            if (!obj.eventInfo || !obj.costs || !obj.participants) {
              core.setFailed('JSON precisa conter as chaves: eventInfo, costs, participants.');
              return;
            }

            // Escreve data.json
            fs.writeFileSync('data.json', JSON.stringify(obj, null, 2), 'utf8');
            core.info('data.json escrito com sucesso.');

      - name: Commit & Push
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add data.json
          if git diff --cached --quiet; then
            echo "Nada a commitar (data.json n√£o mudou)."
          else
            git commit -m "chore(data): update via issue #${{ github.event.issue.number }}"
            git push
          fi

      - name: Comentar sucesso na issue
        if: success()
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const issue_number = context.payload.issue?.number;
            const body = `‚úÖ Dados publicados em **data.json**.\n\nAcesse: ${process.env.PAGES_URL}\n\nDica: na p√°gina, clique em **Atualizar agora** (ou aguarde ~30s).`;
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number,
              body,
            });

      - name: Comentar falha na issue
        if: failure()
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const issue_number = context.payload.issue?.number;
            const body = `‚ùå Falhou ao aplicar atualiza√ß√£o.\nConfira os logs em **Actions** desta execu√ß√£o, corrija a issue (JSON/label) e edite novamente.`;
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number,
              body,
            });
